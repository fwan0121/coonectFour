name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run unit tests
        run: npm test

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.HEROKU_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H heroku.com >> ~/.ssh/known_hosts

      - name: Add Heroku remote
        run: git remote add heroku git@heroku.com:${{ secrets.HEROKU_APP_NAME_STAGING }}.git

      - name: Deploy to Heroku Staging
        run: git push heroku main

  e2e:
    needs: deploy-staging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run end-to-end tests
        run: npm run test:e2e
        env:
          BASE_URL: ${{ secrets.STAGING_BASE_URL }}

  deploy-production:
    needs: e2e
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.HEROKU_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H heroku.com >> ~/.ssh/known_hosts

      - name: Add Heroku remote
        run: git remote add heroku git@heroku.com:${{ secrets.HEROKU_APP_NAME_PRODUCTION }}.git

      - name: Deploy to Heroku Production
        run: git push heroku main
